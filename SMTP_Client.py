from socket import *import sslimport base64msg = "SUBJECT: SMTP Mail Client Test\nI love computer network!\n.\r\n"endmsg = "\r\n.\r\n"mailserver = 'smtp.gmail.com'clientSocket = socket(AF_INET, SOCK_STREAM)clientSocket.connect((mailserver, 587))recv = clientSocket.recv(1024)print (recv)if recv[:3] != '220':	print ('220 reply not received from server.')	#Send HELO command and print server responseheloCommand = 'HELO Alice\r\n'print ("Sending First HELO")clientSocket.sendall(heloCommand.encode())recvhelo = clientSocket.recv(1024)print (recvhelo)if recvhelo[:3] != '250':	print ('250 reply not received from server.')#sending the STARTTLS command to server and print server responsecommand = b' STARTTLS\r\n'clientSocket.send(command)Rec10 = clientSocket.recv(1024)print(Rec10)		#Send MAIL FROM command and print server response.scc = ssl.wrap_socket(clientSocket, ssl_version=ssl.PROTOCOL_SSLv23)ssc.send('auth login \r\n')scc.send(base64.b64encode('pythontesting2015@gmail.com')+'\r\n')scc.send(base64.b64encode('abcdef123456789')+'\r\n')print ("Sending MAIL FROM Command")mailid = 'MAIL From: <pythontesting2015@gmail.com>\r\n'clientSocket.sendall(mailid.encode())recv2 = clientSocket.recv(1024)print (recv2)if recv2[:3] != '530':	print ('530 reply not received from server.')#Send RCPT TO command and print server response.print ("Sending RCPT TO Command")recieptid = 'RCPT TO: <pythontesting2016@gmail.com>\r\n'clientSocket.sendall(recieptid.encode())recv3 = clientSocket.recv(1024)print (recv3)if recv3[:3] != '530':	print ('530 reply not received from server.')#Send DATA command and print server response.print ("Sending DATA Command")senddata = "DATA\r\n"clientSocket.sendall(senddata.encode())recv4 = clientSocket.recv(1024)print (recv4)if recv4[:3] != '530':	print ('530 reply not received from server.')#Send Data and print server response.print ("Sending Data")#messagedata = "SUBJECT: SMTP Mail Client Test\nSMTP Mail Client Test\n.\n\r\n"clientSocket.sendall(msg.encode())recv5 = clientSocket.recv(1024)print (recv5)if recv5[:3] != '502':	print ('502 reply not received from server.')#Send QUIT and print server response.print ("Sending QUIT")bye = "QUIT\r\n"clientSocket.sendall(bye.encode())recv6 = clientSocket.recv(1024)print (recv6)if recv6[:3] != '502':	print ('502 reply not received from server.')print ("Mail Sent")